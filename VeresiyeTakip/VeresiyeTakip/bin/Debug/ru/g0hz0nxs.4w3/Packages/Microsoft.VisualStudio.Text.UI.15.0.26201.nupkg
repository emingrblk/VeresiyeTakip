 a specified error message and a reference to the inner exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:System.Data.Entity.Core.OptimisticConcurrencyException.#ctor(System.String,System.Exception,System.Collections.Generic.IEnumerable{System.Data.Entity.Core.Objects.ObjectStateEntry})">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.OptimisticConcurrencyException" /> that uses a specified error message, a reference to the inner exception, and an enumerable collection of
            <see
                cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" />
            objects.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
            <param name="stateEntries">
            The enumerable collection of <see cref="T:System.Data.Entity.Core.Objects.ObjectStateEntry" /> objects.
            </param>
        </member>
        <member name="T:System.Data.Entity.Core.PropertyConstraintException">
            <summary>
            Property constraint exception class. Note that this class has state - so if you change even
            its internals, it can be a breaking change
            </summary>
        </member>
        <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.PropertyConstraintException" /> class with default message.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.PropertyConstraintException" /> class with supplied message.
            </summary>
            <param name="message">A localized error message.</param>
        </member>
        <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.PropertyConstraintException" /> class with supplied message and inner exception.
            </summary>
            <param name="message">A localized error message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.PropertyConstraintException" /> class.
            </summary>
            <param name="message">A localized error message.</param>
            <param name="propertyName">The name of the property.</param>
        </member>
        <member name="M:System.Data.Entity.Core.PropertyConstraintException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Data.Entity.Core.PropertyConstraintException" /> class.
            </summary>
            <param name="message">A localized error message.</param>
            <param name="propertyName">The name of the property.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:System.Data.Entity.Core.PropertyConstraintException.PropertyName">
            <summary>Gets the name of the property that violated the constraint.</summary>
            <returns>The name of the property that violated the constraint.</returns>
        </member>
        <member name="T:System.Data.Entity.Core.ProviderIncompatibleException">
            <summary>
            This exception is thrown when the store provider exhibits a behavior incompatible with the entity client provider
            </summary>
        </member>
        <member name="M:System.Data.Entity.Core.ProviderIncompatibleException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.ProviderIncompatibleException" />.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Core.ProviderIncompatibleException.#ctor(System.String)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.ProviderIncompatibleException" /> with a specialized error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:System.Data.Entity.Core.ProviderIncompatibleException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of <see cref="T:System.Data.Entity.Core.ProviderIncompatibleException" /> that uses a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="T:System.Data.Entity.DbFunctions">
            <summary>
            Provides common language runtime (CLR) methods that expose EDM canonical functions
            for use in <see cref="T:System.Data.Entity.DbContext"/> or <see cref="T:System.Data.Entity.Core.Objects.ObjectContext"/> LINQ to Entities queries.
            </summary>
            <remarks>
            Note that this class was called EntityFunctions in some previous versions of Entity Framework.
            </remarks>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviation(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDev EDM function to calculate
            the standard deviation of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.StandardDeviationP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical StDevP EDM function to calculate
            the standard deviation for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The standard deviation for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Var(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Var EDM function to calculate
            the variance of the collection.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Decimal})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Double})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Int64})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.VarP(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical VarP EDM function to calculate
            the variance for the population.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="collection"> The collection over which to perform the calculation. </param>
            <returns> The variance for the population. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Left(System.String,System.Nullable{System.Int64})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Left EDM function to return a given
            number of the leftmost characters in a string.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="stringArgument"> The input string. </param>
            <param name="length"> The number of characters to return </param>
            <returns> A string containing the number of characters asked for from the left of the input string. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Right(System.String,System.Nullable{System.Int64})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Right EDM function to return a given
            number of the rightmost characters in a string.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="stringArgument"> The input string. </param>
            <param name="length"> The number of characters to return </param>
            <returns> A string containing the number of characters asked for from the right of the input string. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Reverse(System.String)">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Reverse EDM function to return a given
            string with the order of the characters reversed.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="stringArgument"> The input string. </param>
            <returns> The input string with the order of the characters reversed. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.GetTotalOffsetMinutes(System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical GetTotalOffsetMinutes EDM function to
            return the number of minutes that the given date/time is offset from UTC. This is generally between +780
            and -780 (+ or - 13 hrs).
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateTimeOffsetArgument"> The date/time value to use. </param>
            <returns> The offset of the input from UTC. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.TruncateTime(System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical TruncateTime EDM function to return
            the given date with the time portion cleared.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The date/time value to use. </param>
            <returns> The input date with the time portion cleared. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.TruncateTime(System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical TruncateTime EDM function to return
            the given date with the time portion cleared.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The date/time value to use. </param>
            <returns> The input date with the time portion cleared. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.CreateDateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical CreateDateTime EDM function to
            create a new <see cref="T:System.DateTime"/> object.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="year"> The year. </param>
            <param name="month"> The month (1-based). </param>
            <param name="day"> The day (1-based). </param>
            <param name="hour"> The hours. </param>
            <param name="minute"> The minutes. </param>
            <param name="second"> The seconds, including fractional parts of the seconds if desired. </param>
            <returns> The new date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.CreateDateTimeOffset(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical CreateDateTimeOffset EDM function to
            create a new <see cref="T:System.DateTimeOffset"/> object.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="year"> The year. </param>
            <param name="month"> The month (1-based). </param>
            <param name="day"> The day (1-based). </param>
            <param name="hour"> The hours. </param>
            <param name="minute"> The minutes. </param>
            <param name="second"> The seconds, including fractional parts of the seconds if desired. </param>
            <param name="timeZoneOffset"> The time zone offset part of the new date. </param>
            <returns> The new date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.CreateTime(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Double})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical CreateTime EDM function to
            create a new <see cref="T:System.TimeSpan"/> object.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="hour"> The hours. </param>
            <param name="minute"> The minutes. </param>
            <param name="second"> The seconds, including fractional parts of the seconds if desired. </param>
            <returns> The new time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddYears EDM function to
            add the given number of years to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The input date/time. </param>
            <param name="addValue"> The number of years to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddYears(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddYears EDM function to
            add the given number of years to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The input date/time. </param>
            <param name="addValue"> The number of years to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMonths EDM function to
            add the given number of months to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The input date/time. </param>
            <param name="addValue"> The number of months to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMonths(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMonths EDM function to
            add the given number of months to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The input date/time. </param>
            <param name="addValue"> The number of months to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddDays EDM function to
            add the given number of days to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The input date/time. </param>
            <param name="addValue"> The number of days to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddDays(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddDays EDM function to
            add the given number of days to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue"> The input date/time. </param>
            <param name="addValue"> The number of days to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddHours EDM function to
            add the given number of hours to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of hours to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddHours(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddHours EDM function to
            add the given number of hours to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of hours to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddHours(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddHours EDM function to
            add the given number of hours to a time span.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of hours to add. </param>
            <returns> A resulting time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMinutes EDM function to
            add the given number of minutes to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of minutes to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMinutes(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMinutes EDM function to
            add the given number of minutes to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of minutes to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMinutes EDM function to
            add the given number of minutes to a time span.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of minutes to add. </param>
            <returns> A resulting time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddSeconds EDM function to
            add the given number of seconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of seconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddSeconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddSeconds EDM function to
            add the given number of seconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of seconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddSeconds EDM function to
            add the given number of seconds to a time span.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of seconds to add. </param>
            <returns> A resulting time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMilliseconds EDM function to
            add the given number of milliseconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of milliseconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMilliseconds EDM function to
            add the given number of milliseconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of milliseconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMilliseconds EDM function to
            add the given number of milliseconds to a time span.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of milliseconds to add. </param>
            <returns> A resulting time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMicroseconds EDM function to
            add the given number of microseconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of microseconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMicroseconds EDM function to
            add the given number of microseconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of microseconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddMicroseconds EDM function to
            add the given number of microseconds to a time span.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of microseconds to add. </param>
            <returns> A resulting time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddNanoseconds EDM function to
            add the given number of nanoseconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of nanoseconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddNanoseconds EDM function to
            add the given number of nanoseconds to a date/time.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of nanoseconds to add. </param>
            <returns> A resulting date/time. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AddNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical AddNanoseconds EDM function to
            add the given number of nanoseconds to a time span.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue"> The input date/time. </param>
            <param name="addValue"> The number of nanoseconds to add. </param>
            <returns> A resulting time span. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffYears(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffYears EDM function to
            calculate the number of years between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue1"> The first date/time. </param>
            <param name="dateValue2"> The second date/time. </param>
            <returns> The number of years between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffYears(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffYears EDM function to
            calculate the number of years between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue1"> The first date/time. </param>
            <param name="dateValue2"> The second date/time. </param>
            <returns> The number of years between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMonths(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMonths EDM function to
            calculate the number of months between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue1"> The first date/time. </param>
            <param name="dateValue2"> The second date/time. </param>
            <returns> The number of months between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMonths(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMonths EDM function to
            calculate the number of months between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue1"> The first date/time. </param>
            <param name="dateValue2"> The second date/time. </param>
            <returns> The number of months between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffDays(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffDays EDM function to
            calculate the number of days between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue1"> The first date/time. </param>
            <param name="dateValue2"> The second date/time. </param>
            <returns> The number of days between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffDays(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffDays EDM function to
            calculate the number of days between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="dateValue1"> The first date/time. </param>
            <param name="dateValue2"> The second date/time. </param>
            <returns> The number of days between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffHours(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffHours EDM function to
            calculate the number of hours between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of hours between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffHours(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffHours EDM function to
            calculate the number of hours between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of hours between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffHours(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffHours EDM function to
            calculate the number of hours between two time spans.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first time span. </param>
            <param name="timeValue2"> The second time span. </param>
            <returns> The number of hours between the first and second time spans. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMinutes(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMinutes EDM function to
            calculate the number of minutes between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of minutes between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMinutes(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMinutes EDM function to
            calculate the number of minutes between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of minutes between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMinutes(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMinutes EDM function to
            calculate the number of minutes between two time spans.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first time span. </param>
            <param name="timeValue2"> The second time span. </param>
            <returns> The number of minutes between the first and second time spans. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffSeconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffSeconds EDM function to
            calculate the number of seconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of seconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffSeconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffSeconds EDM function to
            calculate the number of seconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of seconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffSeconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffSeconds EDM function to
            calculate the number of seconds between two time spans.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first time span. </param>
            <param name="timeValue2"> The second time span. </param>
            <returns> The number of seconds between the first and second time spans. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMilliseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMilliseconds EDM function to
            calculate the number of milliseconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of milliseconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMilliseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMilliseconds EDM function to
            calculate the number of milliseconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of milliseconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMilliseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMilliseconds EDM function to
            calculate the number of milliseconds between two time spans.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first time span. </param>
            <param name="timeValue2"> The second time span. </param>
            <returns> The number of milliseconds between the first and second time spans. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMicroseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMicroseconds EDM function to
            calculate the number of microseconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of microseconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMicroseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMicroseconds EDM function to
            calculate the number of microseconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of microseconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffMicroseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffMicroseconds EDM function to
            calculate the number of microseconds between two time spans.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first time span. </param>
            <param name="timeValue2"> The second time span. </param>
            <returns> The number of microseconds between the first and second time spans. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffNanoseconds(System.Nullable{System.DateTimeOffset},System.Nullable{System.DateTimeOffset})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffNanoseconds EDM function to
            calculate the number of nanoseconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of nanoseconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffNanoseconds(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffNanoseconds EDM function to
            calculate the number of nanoseconds between two date/times.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first date/time. </param>
            <param name="timeValue2"> The second date/time. </param>
            <returns> The number of nanoseconds between the first and second date/times. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.DiffNanoseconds(System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical DiffNanoseconds EDM function to
            calculate the number of nanoseconds between two time spans.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="timeValue1"> The first time span. </param>
            <param name="timeValue2"> The second time span. </param>
            <returns> The number of nanoseconds between the first and second time spans. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Truncate(System.Nullable{System.Double},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Truncate EDM function to
            truncate the given value to the number of specified digits.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="value"> The value to truncate. </param>
            <param name="digits"> The number of digits to preserve. </param>
            <returns> The truncated value. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Truncate(System.Nullable{System.Decimal},System.Nullable{System.Int32})">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Truncate EDM function to
            truncate the given value to the number of specified digits.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="value"> The value to truncate. </param>
            <param name="digits"> The number of digits to preserve. </param>
            <returns> The truncated value. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Like(System.String,System.String)">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Like EDM operator to match an expression.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="searchString"> The string to search. </param>
            <param name="likeExpression"> The expression to match against. </param>
            <returns> True if the searched string matches the expression; otherwise false. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.Like(System.String,System.String,System.String)">
            <summary>
            When used as part of a LINQ to Entities query, this method invokes the canonical Like EDM operator to match an expression.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function is translated to a corresponding function in the database.
            </remarks>
            <param name="searchString"> The string to search. </param>
            <param name="likeExpression"> The expression to match against. </param>
            <param name="escapeCharacter"> The string to escape special characters with, must only be a single character. </param>
            <returns> True if the searched string matches the expression; otherwise false. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AsUnicode(System.String)">
            <summary>
            When used as part of a LINQ to Entities query, this method acts as an operator that ensures the input
            is treated as a Unicode string.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function impacts the way the LINQ query is translated to a query that can be run in the database.
            </remarks>
            <param name="value"> The input string. </param>
            <returns> The input string treated as a Unicode string. </returns>
        </member>
        <member name="M:System.Data.Entity.DbFunctions.AsNonUnicode(System.String)">
            <summary>
            When used as part of a LINQ to Entities query, this method acts as an operator that ensures the input
            is treated as a non-Unicode string.
            </summary>
            <remarks>
            You cannot call this function directly. This function can only appear within a LINQ to Entities query.
            This function impacts the way the LINQ query is translated to a query that can be run in the database.
            </remarks>
            <param name="value"> The input string. </param>
            <returns> The input string treated as a non-Unicode string. </returns>
        </member>
        <member name="T:System.Data.Entity.EntityState">
            <summary>
            Describes the state of an entity.
            </summary>
        </member>
        <member name="F:System.Data.Entity.EntityState.Detached">
            <summary>
            The entity is not being tracked by the context.
            An entity is in this state immediately after it has been created with the new operator
            or with one of the <see cref="T:System.Data.Entity.DbSet"/> Create methods.
            </summary>
        </member>
        <member name="F:System.Data.Entity.EntityState.Unchanged">
            <summary>
            The entity is being tracked by the context and exists in the database, and its property
            values have not changed from the values in the database.
            </summary>
        </member>
        <member name="F:System.Data.Entity.EntityState.Added">
            <summary>
            The entity is being tracked by the context but does not yet exist in the database.
            </summary>
        </member>
        <member name="F:System.Data.Entity.EntityState.Deleted">
            <summary>
            The entity is being tracked by the context and exists in the database, but has been marked
            for deletion from the database the next time SaveChanges is called.
            </summary>
        </member>
        <member name="F:System.Data.Entity.EntityState.Modified">
            <summary>
            The entity is being tracked by the context and exists in the database, and some or all of its
            property values have been modified.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DbConnectionInfo">
            <summary>
            Represents information about a database connection.
            </summary>
        </mem